// 
//   COMPONENT_NAME: somx 
// 
//   ORIGINS: 27 
// 
// 
//    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996 
//   All Rights Reserved 
//   Licensed Materials - Property of IBM 
//   US Government Users Restricted Rights - Use, duplication or 
//   disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
// 
//   @(#) 1.8.1.1 src/somples.os2/somd/cpp/event/eventch.idl, somples.somd, som3.0 12/6/96 13:33:48 [12/24/96 07:55:03] 
 
/* 
 * 
 * DISCLAIMER OF WARRANTIES. 
 * The following [enclosed] code is sample code created by IBM 
 * Corporation. This sample code is not part of any standard or IBM 
 * product and is provided to you solely for the purpose of assisting 
 * you in the development of your applications.  The code is provided 
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT 
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF 
 * THIS CODE.  IBM shall not be liable for any damages arising out of 
 * your use of the sample code, even if they have been advised of the 
 * possibility of such damages. 
 * 
 * DISTRIBUTION. 
 * This sample code can be freely distributed, copied, altered, and 
 * incorporated into other software, provided that it bears the above 
 * Copyright notice and DISCLAIMER intact. 
 */ 
 
#ifndef eventch_idl 
#define eventch_idl 
 
#include <somobj.idl> 
#include <eventcom.idl> 
 
module EventChannelAdmin 
{ 
  interface ConsumerAdmin : SOMObject 
  { 
     EventComm::EventConnection add_push_consumer(in EventComm::Consumer c); 
     EventComm::Supplier add_pull_consumer(in EventComm::EventConnection d); 
 
     #ifdef __SOMIDL__ 
     implementation 
     { 
       releaseorder: add_push_consumer, add_pull_consumer; 
 
       //# Class Modifiers 
       callstyle = idl; 
       majorversion = 1;  minorversion = 1; 
       dllname="eventc.dll"; 
 
       //# Method Modifiers 
       passthru C_h_after = "#include <eventcom.ih>"; 
       passthru C_xh_after = "#include <eventcom.xih>"; 
     }; 
     #endif /*  __SOMIDL__   */ 
  }; 
 
  interface SupplierAdmin : SOMObject 
  { 
     EventComm::EventConnection add_pull_supplier(in EventComm::Supplier s); 
     EventComm::Consumer add_push_supplier (in EventComm::EventConnection d); 
 
     #ifdef __SOMIDL__ 
     implementation 
     { 
       releaseorder: add_pull_supplier, add_push_supplier; 
 
       //# Class Modifiers 
       callstyle = idl; 
       majorversion = 1;  minorversion = 1; 
       dllname="eventc.dll"; 
     }; 
     #endif /* __SOMIDL__   */ 
  }; 
 
  interface EventChannel : SOMObject 
  { 
     ConsumerAdmin  for_consumers(); 
     SupplierAdmin  for_suppliers(); 
     void  destroy(); 
 
     #ifdef __SOMIDL__ 
     implementation 
     { 
       releaseorder: for_consumers, for_suppliers, destroy; 
 
       //# instance variables 
       ConsumerAdmin  cons_admin; 
       SupplierAdmin  supp_admin; 
 
       //# Class Modifiers 
       callstyle = idl; 
       majorversion = 1;  minorversion = 1; 
       dllname="eventc.dll"; 
     }; 
     #endif /* __SOMIDL__   */ 
  }; 
 
};  /* module EventChannelAdmin */ 
 
#endif /* eventch_idl */ 
 
