//   
//   COMPONENT_NAME: somx   
//   
//   ORIGINS: 27   
//   
//   
//    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996    
//   All Rights Reserved   
//   Licensed Materials - Property of IBM   
//   US Government Users Restricted Rights - Use, duplication or   
//   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.   
//   
//   @(#) 1.8.1.2 src/somples.os2/somd/cpp/peer/peerserv.idl, somples.somd, som3.0 12/17/96 19:33:32 [12/24/96 07:55:06]
   
/*   
 *   
 * DISCLAIMER OF WARRANTIES.   
 * The following [enclosed] code is sample code created by IBM   
 * Corporation. This sample code is not part of any standard or IBM   
 * product and is provided to you solely for the purpose of assisting   
 * you in the development of your applications.  The code is provided   
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT   
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS   
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF   
 * THIS CODE.  IBM shall not be liable for any damages arising out of   
 * your use of the sample code, even if they have been advised of the   
 * possibility of such damages.   
 *   
 * DISTRIBUTION.   
 * This sample code can be freely distributed, copied, altered, and   
 * incorporated into other software, provided that it bears the above   
 * Copyright notice and DISCLAIMER intact.   
 */   
   
//   
//   Interface for "Peer-to-peer" Example   
//   
//   This class defines a simple DSOM Server object that introduces a   
//   application-specific method for announcing a timeout notification.   
//   
//   Whenever a peer process' timer pops, it will send a message to the   
//   server object announcing the event.   
//   
//   The rest of the server object's functionality is inherited. 
//   This server is trivial in that it does not manage other   
//   objects (none are needed in this simple example).   
//   
   
   
#ifndef peerserver_idl   
#define peerserver_idl   
   
#include <somdserv.idl>   
   
interface PeerServer : SOMObject   
{   
   
  oneway void  noteTimeout(in string serverName1, in string serverName2);   
  // Notification that a timer event occurred for a certain server.   
   
  #ifdef __SOMIDL__   
   
  implementation   
  {   
    releaseorder: noteTimeout;   
   
    //# Class Modifiers   
    callstyle = idl;   
    dllname = "peerserv.dll";   
    memory_management = corba;   
  };   
  #endif /* __SOMIDL__ */   
};   
   
   
#endif  /* peerserver_idl */   
   
